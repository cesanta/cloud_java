
package com.cesanta.cloud;

// GENERATED FILE DO NOT EDIT
// This file is automatically generated with clubbygen.

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import com.cesanta.clubby.lib.Clubby;
import com.cesanta.clubby.lib.ClubbyOptions;
import com.cesanta.clubby.lib.CmdListener;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Provides methods for managing users. Used by the frontend.
 */
public final class AccountService {

    private final Clubby clubby;
    private ClubbyOptions defaultOpts;

    public static AccountService createInstance(Clubby clubby) {
        return new AccountService(clubby);
    }

    private AccountService(Clubby clubby) {
        this.clubby = clubby;
        this.defaultOpts = clubby.getOptions();
    }


    //-- CreateUser {{{

    /**
     * Creates a new user. Can only be called by the frontend.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      AccountService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void createUser(
            AccountService.CreateUserArgs args,
            CmdListener<AccountService.CreateUserResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Account.CreateUser",
                args,
                listener,
                AccountService.CreateUserResponse.class,
                opts
                );
    }

    /**
     * Creates a new user. Can only be called by the frontend.
     */
    public void createUser(
            AccountService.CreateUserArgs args,
            CmdListener<AccountService.CreateUserResponse> listener
            ) {
        createUser(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.AccountService#createUser createUser} method.
     */
    public static final class CreateUserArgs  {

        /**
         * User's email address.
         */
        @JsonProperty("email")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String email;

        /**
         * ID for the new user.
         */
        @JsonProperty("id")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String id;

        /**
         * Display name for the user.
         */
        @JsonProperty("name")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String name;

        /**
         * Password for the user.
         */
        @JsonProperty("password")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String password;


        /**
         * Set user's email address.
         */
        public CreateUserArgs email(String email) {
            this.email = email;
            return this;
        }

        /**
         * Set ID for the new user.
         */
        public CreateUserArgs id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Set display name for the user.
         */
        public CreateUserArgs name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Set password for the user.
         */
        public CreateUserArgs password(String password) {
            this.password = password;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.AccountService#createUser createUser} method.
     */
    public static final class CreateUserResponse  {


    }


    // }}}

    // }}}

    //-- GetInfo {{{

    /**
     * Retrieves info about an existing user.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      AccountService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void getInfo(
            AccountService.GetInfoArgs args,
            CmdListener<AccountService.GetInfoResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Account.GetInfo",
                args,
                listener,
                AccountService.GetInfoResponse.class,
                opts
                );
    }

    /**
     * Retrieves info about an existing user.
     */
    public void getInfo(
            AccountService.GetInfoArgs args,
            CmdListener<AccountService.GetInfoResponse> listener
            ) {
        getInfo(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.AccountService#getInfo getInfo} method.
     */
    public static final class GetInfoArgs  {

        /**
         * ID of the user.
         */
        @JsonProperty("id")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String id;


        /**
         * Set ID of the user.
         */
        public GetInfoArgs id(String id) {
            this.id = id;
            return this;
        }

    }


    // }}}

    //-- response {{{

    public static final class GetInfoResponse  {

        @JsonProperty("email")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String email;

        @JsonProperty("name")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String name;


    }


    // }}}

    // }}}


    public void setDefaultOptions(ClubbyOptions opts) {
        this.defaultOpts = ClubbyOptions.createFrom(opts);
    }

    public ClubbyOptions getOptions() {
        return ClubbyOptions.createFrom(defaultOpts);
    }
}

