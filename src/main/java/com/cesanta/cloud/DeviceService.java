
package com.cesanta.cloud;

// GENERATED FILE DO NOT EDIT
// This file is automatically generated with clubbygen.

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import com.cesanta.clubby.lib.Clubby;
import com.cesanta.clubby.lib.ClubbyOptions;
import com.cesanta.clubby.lib.CmdListener;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Provides methods to manage devices.
 */
public final class DeviceService {

    private final Clubby clubby;
    private ClubbyOptions defaultOpts;

    public static DeviceService createInstance(Clubby clubby) {
        return new DeviceService(clubby);
    }

    private DeviceService(Clubby clubby) {
        this.clubby = clubby;
        this.defaultOpts = clubby.getOptions();
    }


    //-- Add {{{

    /**
     * Adds a new device.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      DeviceService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void add(
            DeviceService.AddArgs args,
            CmdListener<DeviceService.AddResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Device.Add",
                args,
                listener,
                DeviceService.AddResponse.class,
                opts
                );
    }

    /**
     * Adds a new device.
     */
    public void add(
            DeviceService.AddArgs args,
            CmdListener<DeviceService.AddResponse> listener
            ) {
        add(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.DeviceService#add add} method.
     */
    public static final class AddArgs  {

        /**
         * ID of the device.
         */
        @JsonProperty("deviceid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String deviceid;

        /**
         * Optional ID of the project to add device to.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;

        /**
         * Pre-shared key that device will use for authentication.
         */
        @JsonProperty("psk")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String psk;


        /**
         * Set ID of the device.
         */
        public AddArgs deviceid(String deviceid) {
            this.deviceid = deviceid;
            return this;
        }

        /**
         * Set optional ID of the project to add device to.
         */
        public AddArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

        /**
         * Set pre-shared key that device will use for authentication.
         */
        public AddArgs psk(String psk) {
            this.psk = psk;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.DeviceService#add add} method.
     */
    public static final class AddResponse  {


    }


    // }}}

    // }}}

    //-- Claim {{{

    /**
     * Claim an unclaimed device using a token.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      DeviceService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void claim(
            DeviceService.ClaimArgs args,
            CmdListener<DeviceService.ClaimResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Device.Claim",
                args,
                listener,
                DeviceService.ClaimResponse.class,
                opts
                );
    }

    /**
     * Claim an unclaimed device using a token.
     */
    public void claim(
            DeviceService.ClaimArgs args,
            CmdListener<DeviceService.ClaimResponse> listener
            ) {
        claim(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.DeviceService#claim claim} method.
     */
    public static final class ClaimArgs  {

        /**
         * ID of the device.
         */
        @JsonProperty("deviceid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String deviceid;

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;

        /**
         * Auth token based on PSK.
         */
        @JsonProperty("token")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String token;


        /**
         * Set ID of the device.
         */
        public ClaimArgs deviceid(String deviceid) {
            this.deviceid = deviceid;
            return this;
        }

        /**
         * Set ID of the project.
         */
        public ClaimArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

        /**
         * Set auth token based on PSK.
         */
        public ClaimArgs token(String token) {
            this.token = token;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.DeviceService#claim claim} method.
     */
    public static final class ClaimResponse  {


    }


    // }}}

    // }}}

    //-- Delete {{{

    /**
     * Removes the devices from the project.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      DeviceService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void delete(
            DeviceService.DeleteArgs args,
            CmdListener<DeviceService.DeleteResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Device.Delete",
                args,
                listener,
                DeviceService.DeleteResponse.class,
                opts
                );
    }

    /**
     * Removes the devices from the project.
     */
    public void delete(
            DeviceService.DeleteArgs args,
            CmdListener<DeviceService.DeleteResponse> listener
            ) {
        delete(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.DeviceService#delete delete} method.
     */
    public static final class DeleteArgs  {

        /**
         * ID of the device.
         */
        @JsonProperty("deviceid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String deviceid;

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;


        /**
         * Set ID of the device.
         */
        public DeleteArgs deviceid(String deviceid) {
            this.deviceid = deviceid;
            return this;
        }

        /**
         * Set ID of the project.
         */
        public DeleteArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.DeviceService#delete delete} method.
     */
    public static final class DeleteResponse  {


    }


    // }}}

    // }}}

    //-- GetInfo {{{

    /**
     * Gets device information.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      DeviceService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void getInfo(
            DeviceService.GetInfoArgs args,
            CmdListener<DeviceService.GetInfoResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Device.GetInfo",
                args,
                listener,
                DeviceService.GetInfoResponse.class,
                opts
                );
    }

    /**
     * Gets device information.
     */
    public void getInfo(
            DeviceService.GetInfoArgs args,
            CmdListener<DeviceService.GetInfoResponse> listener
            ) {
        getInfo(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.DeviceService#getInfo getInfo} method.
     */
    public static final class GetInfoArgs  {

        /**
         * ID of the device.
         */
        @JsonProperty("deviceid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String deviceid;


        /**
         * Set ID of the device.
         */
        public GetInfoArgs deviceid(String deviceid) {
            this.deviceid = deviceid;
            return this;
        }

    }


    // }}}

    //-- response {{{

    public static final class GetInfoResponse  {

        /**
         * ID of the device.
         */
        @JsonProperty("deviceid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String deviceid;

        /**
         * Optional ID of the project to add device to.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String projectid;

        /**
         * Pre-shared key that device will use for authentication.
         */
        @JsonProperty("psk")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String psk;


    }


    // }}}

    // }}}

    //-- List {{{

    /**
     * Returns a list of devices in a given project.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      DeviceService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void list(
            DeviceService.ListArgs args,
            CmdListener<DeviceService.ListResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Device.List",
                args,
                listener,
                DeviceService.ListResponse.class,
                opts
                );
    }

    /**
     * Returns a list of devices in a given project.
     */
    public void list(
            DeviceService.ListArgs args,
            CmdListener<DeviceService.ListResponse> listener
            ) {
        list(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.DeviceService#list list} method.
     */
    public static final class ListArgs  {

        /**
         * Filter expression, currently only 'labelname=labelvalue' supported.
         */
        @JsonProperty("filter")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String filter;

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;


        /**
         * Set filter expression, currently only 'labelname=labelvalue' supported.
         */
        public ListArgs filter(String filter) {
            this.filter = filter;
            return this;
        }

        /**
         * Set ID of the project.
         */
        public ListArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.DeviceService#list list} method.
     */
    public static final class ListResponse extends ArrayList<String> {

        static final long serialVersionUID = 1;


    }


    // }}}

    // }}}


    public void setDefaultOptions(ClubbyOptions opts) {
        this.defaultOpts = ClubbyOptions.createFrom(opts);
    }

    public ClubbyOptions getOptions() {
        return ClubbyOptions.createFrom(defaultOpts);
    }
}

