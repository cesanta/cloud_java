/*
 * GENERATED FILE DO NOT EDIT
 * This file is automatically generated with miot clubbygen.
 *
 * Copyright (c) 2016 Cesanta Software Limited
 * All rights reserved
 */

package com.cesanta.cloud;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import com.cesanta.clubby.lib.Clubby;
import com.cesanta.clubby.lib.ClubbyOptions;
import com.cesanta.clubby.lib.CmdListener;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Rollout service stores info about firmware rollouts.
 */
public final class RolloutService {

    private final Clubby clubby;
    private ClubbyOptions defaultOpts;

    public static RolloutService createInstance(Clubby clubby) {
        return new RolloutService(clubby);
    }

    private RolloutService(Clubby clubby) {
        this.clubby = clubby;
        this.defaultOpts = clubby.getOptions();
    }


    //-- AddDevices {{{

    /**
     * Adds devices to the rollout. Mostly used by the backend.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      RolloutService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void addDevices(
            RolloutService.AddDevicesArgs args,
            CmdListener<RolloutService.AddDevicesResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Rollout.AddDevices",
                args,
                listener,
                RolloutService.AddDevicesResponse.class,
                opts
                );
    }

    /**
     * Adds devices to the rollout. Mostly used by the backend.
     */
    public void addDevices(
            RolloutService.AddDevicesArgs args,
            CmdListener<RolloutService.AddDevicesResponse> listener
            ) {
        addDevices(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.RolloutService#addDevices addDevices} method.
     */
    public static final class AddDevicesArgs  {

        /**
         * List of the device IDs.
         */
        @JsonProperty("devices")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private List<String> devices = new ArrayList<String>();

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;

        /**
         * ID of the rollout.
         */
        @JsonProperty("rolloutid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String rolloutid;


        /**
         * Add an item to the list of the device IDs.
         */
        public AddDevicesArgs device(String device) {
            this.devices.add(device);
            return this;
        }

        /**
         * Set ID of the project.
         */
        public AddDevicesArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

        /**
         * Set ID of the rollout.
         */
        public AddDevicesArgs rolloutid(String rolloutid) {
            this.rolloutid = rolloutid;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.RolloutService#addDevices addDevices} method.
     */
    public static final class AddDevicesResponse  {


    }


    // }}}

    // }}}

    //-- Create {{{

    /**
     * Creates new rollout.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      RolloutService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void create(
            RolloutService.CreateArgs args,
            CmdListener<RolloutService.CreateResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Rollout.Create",
                args,
                listener,
                RolloutService.CreateResponse.class,
                opts
                );
    }

    /**
     * Creates new rollout.
     */
    public void create(
            RolloutService.CreateArgs args,
            CmdListener<RolloutService.CreateResponse> listener
            ) {
        create(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.RolloutService#create create} method.
     */
    public static final class CreateArgs  {

        /**
         * Filter expression, currently only 'labelname=labelvalue' supported.
         */
        @JsonProperty("deviceFilter")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String deviceFilter;

        /**
         * ID of the firmware image.
         */
        @JsonProperty("firmwareid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String firmwareid;

        /**
         * Human-readable name for the rollout.
         */
        @JsonProperty("name")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String name;

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;


        /**
         * Set filter expression, currently only 'labelname=labelvalue' supported.
         */
        public CreateArgs deviceFilter(String deviceFilter) {
            this.deviceFilter = deviceFilter;
            return this;
        }

        /**
         * Set ID of the firmware image.
         */
        public CreateArgs firmwareid(String firmwareid) {
            this.firmwareid = firmwareid;
            return this;
        }

        /**
         * Set human-readable name for the rollout.
         */
        public CreateArgs name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Set ID of the project.
         */
        public CreateArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.RolloutService#create create} method.
     */
    public static final class CreateResponse  {


    }


    // }}}

    // }}}

    //-- Delete {{{

    /**
     * Deletes the rollout.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      RolloutService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void delete(
            RolloutService.DeleteArgs args,
            CmdListener<RolloutService.DeleteResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Rollout.Delete",
                args,
                listener,
                RolloutService.DeleteResponse.class,
                opts
                );
    }

    /**
     * Deletes the rollout.
     */
    public void delete(
            RolloutService.DeleteArgs args,
            CmdListener<RolloutService.DeleteResponse> listener
            ) {
        delete(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.RolloutService#delete delete} method.
     */
    public static final class DeleteArgs  {

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;

        /**
         * ID of the rollout.
         */
        @JsonProperty("rolloutid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String rolloutid;


        /**
         * Set ID of the project.
         */
        public DeleteArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

        /**
         * Set ID of the rollout.
         */
        public DeleteArgs rolloutid(String rolloutid) {
            this.rolloutid = rolloutid;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.RolloutService#delete delete} method.
     */
    public static final class DeleteResponse  {


    }


    // }}}

    // }}}

    //-- Get {{{

    /**
     * Returns info about a particular rollout.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      RolloutService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void get(
            RolloutService.GetArgs args,
            CmdListener<RolloutService.GetResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Rollout.Get",
                args,
                listener,
                RolloutService.GetResponse.class,
                opts
                );
    }

    /**
     * Returns info about a particular rollout.
     */
    public void get(
            RolloutService.GetArgs args,
            CmdListener<RolloutService.GetResponse> listener
            ) {
        get(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.RolloutService#get get} method.
     */
    public static final class GetArgs  {

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;

        /**
         * ID of the rollout.
         */
        @JsonProperty("rolloutid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String rolloutid;


        /**
         * Set ID of the project.
         */
        public GetArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

        /**
         * Set ID of the rollout.
         */
        public GetArgs rolloutid(String rolloutid) {
            this.rolloutid = rolloutid;
            return this;
        }

    }


    // }}}

    //-- response {{{

    public static final class GetResponse  {

        @JsonProperty("deviceFilter")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String deviceFilter;

        @JsonProperty("firmwareid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String firmwareid;

        @JsonProperty("id")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String id;

        @JsonProperty("name")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String name;

        @JsonProperty("state")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String state;


    }


    // }}}

    // }}}

    //-- List {{{

    /**
     * Returns info about rollouts. If `projectid` and/or `state` are specified, only matching rollouts will be returned.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      RolloutService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void list(
            RolloutService.ListArgs args,
            CmdListener<RolloutService.ListResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Rollout.List",
                args,
                listener,
                RolloutService.ListResponse.class,
                opts
                );
    }

    /**
     * Returns info about rollouts. If `projectid` and/or `state` are specified, only matching rollouts will be returned.
     */
    public void list(
            RolloutService.ListArgs args,
            CmdListener<RolloutService.ListResponse> listener
            ) {
        list(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.RolloutService#list list} method.
     */
    public static final class ListArgs  {

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;

        /**
         * If present, only rollouts in specified state will be returned.
         */
        @JsonProperty("state")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String state;


        /**
         * Set ID of the project.
         */
        public ListArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

        /**
         * Set if present, only rollouts in specified state will be returned.
         */
        public ListArgs state(String state) {
            this.state = state;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.RolloutService#list list} method.
     */
    public static final class ListResponse extends ArrayList<ListResponseItem> {

        static final long serialVersionUID = 1;


    }


    public static final class ListResponseItem  {

        @JsonProperty("deviceFilter")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String deviceFilter;

        @JsonProperty("firmwareid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String firmwareid;

        @JsonProperty("id")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String id;

        @JsonProperty("name")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String name;

        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String projectid;

        @JsonProperty("state")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String state;


    }


    // }}}

    // }}}

    //-- ListDevices {{{

    /**
     * Returns the list of devices previously added to the rollout.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      RolloutService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void listDevices(
            RolloutService.ListDevicesArgs args,
            CmdListener<RolloutService.ListDevicesResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Rollout.ListDevices",
                args,
                listener,
                RolloutService.ListDevicesResponse.class,
                opts
                );
    }

    /**
     * Returns the list of devices previously added to the rollout.
     */
    public void listDevices(
            RolloutService.ListDevicesArgs args,
            CmdListener<RolloutService.ListDevicesResponse> listener
            ) {
        listDevices(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.RolloutService#listDevices listDevices} method.
     */
    public static final class ListDevicesArgs  {

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;

        /**
         * ID of the rollout.
         */
        @JsonProperty("rolloutid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String rolloutid;


        /**
         * Set ID of the project.
         */
        public ListDevicesArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

        /**
         * Set ID of the rollout.
         */
        public ListDevicesArgs rolloutid(String rolloutid) {
            this.rolloutid = rolloutid;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.RolloutService#listDevices listDevices} method.
     */
    public static final class ListDevicesResponse extends ArrayList<ListDevicesResponseItem> {

        static final long serialVersionUID = 1;


    }


    public static final class ListDevicesResponseItem  {

        @JsonProperty("id")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String id;

        @JsonProperty("state")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String state;

        @JsonProperty("updateCommandId")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String updateCommandId;


    }


    // }}}

    // }}}

    //-- SetDeviceState {{{

    /**
     * Changes the state of the device in rollout. Used by the backend.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      RolloutService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void setDeviceState(
            RolloutService.SetDeviceStateArgs args,
            CmdListener<RolloutService.SetDeviceStateResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Rollout.SetDeviceState",
                args,
                listener,
                RolloutService.SetDeviceStateResponse.class,
                opts
                );
    }

    /**
     * Changes the state of the device in rollout. Used by the backend.
     */
    public void setDeviceState(
            RolloutService.SetDeviceStateArgs args,
            CmdListener<RolloutService.SetDeviceStateResponse> listener
            ) {
        setDeviceState(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.RolloutService#setDeviceState setDeviceState} method.
     */
    public static final class SetDeviceStateArgs  {

        /**
         * ID of the device.
         */
        @JsonProperty("deviceid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String deviceid;

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;

        /**
         * ID of the rollout.
         */
        @JsonProperty("rolloutid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String rolloutid;

        /**
         * Target state.
         */
        @JsonProperty("state")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String state;

        @JsonProperty("updateCommandId")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String updateCommandId;


        /**
         * Set ID of the device.
         */
        public SetDeviceStateArgs deviceid(String deviceid) {
            this.deviceid = deviceid;
            return this;
        }

        /**
         * Set ID of the project.
         */
        public SetDeviceStateArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

        /**
         * Set ID of the rollout.
         */
        public SetDeviceStateArgs rolloutid(String rolloutid) {
            this.rolloutid = rolloutid;
            return this;
        }

        /**
         * Set target state.
         */
        public SetDeviceStateArgs state(String state) {
            this.state = state;
            return this;
        }

        /**
         * Set updateCommandId
         */
        public SetDeviceStateArgs updateCommandId(String updateCommandId) {
            this.updateCommandId = updateCommandId;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.RolloutService#setDeviceState setDeviceState} method.
     */
    public static final class SetDeviceStateResponse  {


    }


    // }}}

    // }}}

    //-- SetState {{{

    /**
     * Changes state of the rollout.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      RolloutService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void setState(
            RolloutService.SetStateArgs args,
            CmdListener<RolloutService.SetStateResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Rollout.SetState",
                args,
                listener,
                RolloutService.SetStateResponse.class,
                opts
                );
    }

    /**
     * Changes state of the rollout.
     */
    public void setState(
            RolloutService.SetStateArgs args,
            CmdListener<RolloutService.SetStateResponse> listener
            ) {
        setState(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.RolloutService#setState setState} method.
     */
    public static final class SetStateArgs  {

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;

        /**
         * ID of the rollout.
         */
        @JsonProperty("rolloutid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String rolloutid;

        /**
         * Target state.
         */
        @JsonProperty("state")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String state;


        /**
         * Set ID of the project.
         */
        public SetStateArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

        /**
         * Set ID of the rollout.
         */
        public SetStateArgs rolloutid(String rolloutid) {
            this.rolloutid = rolloutid;
            return this;
        }

        /**
         * Set target state.
         */
        public SetStateArgs state(String state) {
            this.state = state;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.RolloutService#setState setState} method.
     */
    public static final class SetStateResponse  {


    }


    // }}}

    // }}}


    public void setDefaultOptions(ClubbyOptions opts) {
        this.defaultOpts = ClubbyOptions.createFrom(opts);
    }

    public ClubbyOptions getOptions() {
        return ClubbyOptions.createFrom(defaultOpts);
    }
}

