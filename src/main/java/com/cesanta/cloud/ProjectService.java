
package com.cesanta.cloud;

// GENERATED FILE DO NOT EDIT
// This file is automatically generated with clubbygen.

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import com.cesanta.clubby.lib.Clubby;
import com.cesanta.clubby.lib.ClubbyOptions;
import com.cesanta.clubby.lib.CmdListener;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Provides methods to manage projects.
 */
public final class ProjectService {

    private final Clubby clubby;
    private ClubbyOptions defaultOpts;

    public static ProjectService createInstance(Clubby clubby) {
        return new ProjectService(clubby);
    }

    private ProjectService(Clubby clubby) {
        this.clubby = clubby;
        this.defaultOpts = clubby.getOptions();
    }


    //-- AddDevice {{{

    /**
     * Adds a new device.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      ProjectService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void addDevice(
            ProjectService.AddDeviceArgs args,
            CmdListener<ProjectService.AddDeviceResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Project.AddDevice",
                args,
                listener,
                ProjectService.AddDeviceResponse.class,
                opts
                );
    }

    /**
     * Adds a new device.
     */
    public void addDevice(
            ProjectService.AddDeviceArgs args,
            CmdListener<ProjectService.AddDeviceResponse> listener
            ) {
        addDevice(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.ProjectService#addDevice addDevice} method.
     */
    public static final class AddDeviceArgs  {

        /**
         * ID of the device.
         */
        @JsonProperty("deviceid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String deviceid;

        /**
         * Optional ID of the project to add device to.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;

        /**
         * Pre-shared key that device will use for authentication.
         */
        @JsonProperty("psk")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String psk;


        /**
         * Set ID of the device.
         */
        public AddDeviceArgs deviceid(String deviceid) {
            this.deviceid = deviceid;
            return this;
        }

        /**
         * Set optional ID of the project to add device to.
         */
        public AddDeviceArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

        /**
         * Set pre-shared key that device will use for authentication.
         */
        public AddDeviceArgs psk(String psk) {
            this.psk = psk;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.ProjectService#addDevice addDevice} method.
     */
    public static final class AddDeviceResponse  {


    }


    // }}}

    // }}}

    //-- CheckAccess {{{

    /**
     * Checks if a given user has a specified level of access to a given project.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      ProjectService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void checkAccess(
            ProjectService.CheckAccessArgs args,
            CmdListener<Boolean> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Project.CheckAccess",
                args,
                listener,
                Boolean.class,
                opts
                );
    }

    /**
     * Checks if a given user has a specified level of access to a given project.
     */
    public void checkAccess(
            ProjectService.CheckAccessArgs args,
            CmdListener<Boolean> listener
            ) {
        checkAccess(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.ProjectService#checkAccess checkAccess} method.
     */
    public static final class CheckAccessArgs  {

        /**
         * Access level you want to confirm.
         */
        @JsonProperty("level")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private Long level;

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;

        /**
         * ID of the user.
         */
        @JsonProperty("userid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String userid;


        /**
         * Set access level you want to confirm.
         */
        public CheckAccessArgs level(long level) {
            this.level = level;
            return this;
        }

        /**
         * Set ID of the project.
         */
        public CheckAccessArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

        /**
         * Set ID of the user.
         */
        public CheckAccessArgs userid(String userid) {
            this.userid = userid;
            return this;
        }

    }


    // }}}

    //-- response {{{

    // }}}

    // }}}

    //-- ClaimDevice {{{

    /**
     * Claim an unclaimed device using a token.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      ProjectService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void claimDevice(
            ProjectService.ClaimDeviceArgs args,
            CmdListener<ProjectService.ClaimDeviceResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Project.ClaimDevice",
                args,
                listener,
                ProjectService.ClaimDeviceResponse.class,
                opts
                );
    }

    /**
     * Claim an unclaimed device using a token.
     */
    public void claimDevice(
            ProjectService.ClaimDeviceArgs args,
            CmdListener<ProjectService.ClaimDeviceResponse> listener
            ) {
        claimDevice(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.ProjectService#claimDevice claimDevice} method.
     */
    public static final class ClaimDeviceArgs  {

        /**
         * ID of the device.
         */
        @JsonProperty("deviceid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String deviceid;

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;

        /**
         * Auth token based on PSK.
         */
        @JsonProperty("token")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String token;


        /**
         * Set ID of the device.
         */
        public ClaimDeviceArgs deviceid(String deviceid) {
            this.deviceid = deviceid;
            return this;
        }

        /**
         * Set ID of the project.
         */
        public ClaimDeviceArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

        /**
         * Set auth token based on PSK.
         */
        public ClaimDeviceArgs token(String token) {
            this.token = token;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.ProjectService#claimDevice claimDevice} method.
     */
    public static final class ClaimDeviceResponse  {


    }


    // }}}

    // }}}

    //-- Create {{{

    /**
     * Creates a new project.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      ProjectService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void create(
            ProjectService.CreateArgs args,
            CmdListener<String> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Project.Create",
                args,
                listener,
                String.class,
                opts
                );
    }

    /**
     * Creates a new project.
     */
    public void create(
            ProjectService.CreateArgs args,
            CmdListener<String> listener
            ) {
        create(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.ProjectService#create create} method.
     */
    public static final class CreateArgs  {

        /**
         * ID of a project. Assigned automatically if not specified.
         */
        @JsonProperty("id")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String id;

        /**
         * Human-readable name for the project.
         */
        @JsonProperty("name")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String name;

        /**
         * ID of the owner for the new project. Set to ID of the caller by default.
         */
        @JsonProperty("owner")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String owner;


        /**
         * Set ID of a project. Assigned automatically if not specified.
         */
        public CreateArgs id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Set human-readable name for the project.
         */
        public CreateArgs name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Set ID of the owner for the new project. Set to ID of the caller by default.
         */
        public CreateArgs owner(String owner) {
            this.owner = owner;
            return this;
        }

    }


    // }}}

    //-- response {{{

    // }}}

    // }}}

    //-- Delete {{{

    /**
     * Deletes a project
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      ProjectService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void delete(
            ProjectService.DeleteArgs args,
            CmdListener<ProjectService.DeleteResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Project.Delete",
                args,
                listener,
                ProjectService.DeleteResponse.class,
                opts
                );
    }

    /**
     * Deletes a project
     */
    public void delete(
            ProjectService.DeleteArgs args,
            CmdListener<ProjectService.DeleteResponse> listener
            ) {
        delete(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.ProjectService#delete delete} method.
     */
    public static final class DeleteArgs  {

        /**
         * ID of the project to be deleted.
         */
        @JsonProperty("id")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String id;


        /**
         * Set ID of the project to be deleted.
         */
        public DeleteArgs id(String id) {
            this.id = id;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.ProjectService#delete delete} method.
     */
    public static final class DeleteResponse  {


    }


    // }}}

    // }}}

    //-- DeleteDevice {{{

    /**
     * Removes the devices from the project.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      ProjectService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void deleteDevice(
            ProjectService.DeleteDeviceArgs args,
            CmdListener<ProjectService.DeleteDeviceResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Project.DeleteDevice",
                args,
                listener,
                ProjectService.DeleteDeviceResponse.class,
                opts
                );
    }

    /**
     * Removes the devices from the project.
     */
    public void deleteDevice(
            ProjectService.DeleteDeviceArgs args,
            CmdListener<ProjectService.DeleteDeviceResponse> listener
            ) {
        deleteDevice(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.ProjectService#deleteDevice deleteDevice} method.
     */
    public static final class DeleteDeviceArgs  {

        /**
         * ID of the device.
         */
        @JsonProperty("deviceid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String deviceid;

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;


        /**
         * Set ID of the device.
         */
        public DeleteDeviceArgs deviceid(String deviceid) {
            this.deviceid = deviceid;
            return this;
        }

        /**
         * Set ID of the project.
         */
        public DeleteDeviceArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.ProjectService#deleteDevice deleteDevice} method.
     */
    public static final class DeleteDeviceResponse  {


    }


    // }}}

    // }}}

    //-- Get {{{

    /**
     * Returns project info for a given project
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      ProjectService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void get(
            ProjectService.GetArgs args,
            CmdListener<ProjectService.GetResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Project.Get",
                args,
                listener,
                ProjectService.GetResponse.class,
                opts
                );
    }

    /**
     * Returns project info for a given project
     */
    public void get(
            ProjectService.GetArgs args,
            CmdListener<ProjectService.GetResponse> listener
            ) {
        get(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.ProjectService#get get} method.
     */
    public static final class GetArgs  {

        /**
         * ID of the project to be retreived
         */
        @JsonProperty("id")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String id;


        /**
         * Set ID of the project to be retreived
         */
        public GetArgs id(String id) {
            this.id = id;
            return this;
        }

    }


    // }}}

    //-- response {{{

    public static final class GetResponse  {

        @JsonProperty("id")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String id;

        @JsonProperty("name")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String name;


    }


    // }}}

    // }}}

    //-- GetDevice {{{

    /**
     * Gets device information.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      ProjectService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void getDevice(
            ProjectService.GetDeviceArgs args,
            CmdListener<ProjectService.GetDeviceResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Project.GetDevice",
                args,
                listener,
                ProjectService.GetDeviceResponse.class,
                opts
                );
    }

    /**
     * Gets device information.
     */
    public void getDevice(
            ProjectService.GetDeviceArgs args,
            CmdListener<ProjectService.GetDeviceResponse> listener
            ) {
        getDevice(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.ProjectService#getDevice getDevice} method.
     */
    public static final class GetDeviceArgs  {

        /**
         * ID of the device.
         */
        @JsonProperty("deviceid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String deviceid;


        /**
         * Set ID of the device.
         */
        public GetDeviceArgs deviceid(String deviceid) {
            this.deviceid = deviceid;
            return this;
        }

    }


    // }}}

    //-- response {{{

    public static final class GetDeviceResponse  {

        /**
         * ID of the device.
         */
        @JsonProperty("deviceid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String deviceid;

        /**
         * Optional ID of the project to add device to.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String projectid;

        /**
         * Pre-shared key that device will use for authentication.
         */
        @JsonProperty("psk")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String psk;


    }


    // }}}

    // }}}

    //-- GrantAccess {{{

    /**
     * Sets access level to the project for the user.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      ProjectService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void grantAccess(
            ProjectService.GrantAccessArgs args,
            CmdListener<ProjectService.GrantAccessResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Project.GrantAccess",
                args,
                listener,
                ProjectService.GrantAccessResponse.class,
                opts
                );
    }

    /**
     * Sets access level to the project for the user.
     */
    public void grantAccess(
            ProjectService.GrantAccessArgs args,
            CmdListener<ProjectService.GrantAccessResponse> listener
            ) {
        grantAccess(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.ProjectService#grantAccess grantAccess} method.
     */
    public static final class GrantAccessArgs  {

        /**
         * Access level. Currently defined levels are: 0 - no access, 10 - read access (e.g. can list devices, but not modify anything), 20 - write access (e.g. can add devices, upload firmware images, create rollouts), 30 - manage access (can grant and revoke privileges for other users).
         */
        @JsonProperty("level")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private Long level;

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;

        /**
         * ID of the user.
         */
        @JsonProperty("userid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String userid;


        /**
         * Set access level. Currently defined levels are: 0 - no access, 10 - read access (e.g. can list devices, but not modify anything), 20 - write access (e.g. can add devices, upload firmware images, create rollouts), 30 - manage access (can grant and revoke privileges for other users).
         */
        public GrantAccessArgs level(long level) {
            this.level = level;
            return this;
        }

        /**
         * Set ID of the project.
         */
        public GrantAccessArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

        /**
         * Set ID of the user.
         */
        public GrantAccessArgs userid(String userid) {
            this.userid = userid;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.ProjectService#grantAccess grantAccess} method.
     */
    public static final class GrantAccessResponse  {


    }


    // }}}

    // }}}

    //-- List {{{

    /**
     * Returns a list of projects the caller has access to.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      ProjectService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void list(
            ProjectService.ListArgs args,
            CmdListener<ProjectService.ListResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Project.List",
                args,
                listener,
                ProjectService.ListResponse.class,
                opts
                );
    }

    /**
     * Returns a list of projects the caller has access to.
     */
    public void list(
            ProjectService.ListArgs args,
            CmdListener<ProjectService.ListResponse> listener
            ) {
        list(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.ProjectService#list list} method.
     */
    public static final class ListArgs  {


    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.ProjectService#list list} method.
     */
    public static final class ListResponse extends ArrayList<ListResponseItem> {

        static final long serialVersionUID = 1;


    }


    public static final class ListResponseItem  {

        @JsonProperty("id")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String id;

        @JsonProperty("name")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String name;


    }


    // }}}

    // }}}

    //-- ListDevices {{{

    /**
     * Returns a list of devices in a given project.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      ProjectService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void listDevices(
            ProjectService.ListDevicesArgs args,
            CmdListener<ProjectService.ListDevicesResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Project.ListDevices",
                args,
                listener,
                ProjectService.ListDevicesResponse.class,
                opts
                );
    }

    /**
     * Returns a list of devices in a given project.
     */
    public void listDevices(
            ProjectService.ListDevicesArgs args,
            CmdListener<ProjectService.ListDevicesResponse> listener
            ) {
        listDevices(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.ProjectService#listDevices listDevices} method.
     */
    public static final class ListDevicesArgs  {

        /**
         * Filter expression, currently only 'labelname=labelvalue' supported.
         */
        @JsonProperty("filter")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String filter;

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;


        /**
         * Set filter expression, currently only 'labelname=labelvalue' supported.
         */
        public ListDevicesArgs filter(String filter) {
            this.filter = filter;
            return this;
        }

        /**
         * Set ID of the project.
         */
        public ListDevicesArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.ProjectService#listDevices listDevices} method.
     */
    public static final class ListDevicesResponse extends ArrayList<String> {

        static final long serialVersionUID = 1;


    }


    // }}}

    // }}}

    //-- ListDevicesWithMetadata {{{

    /**
     * Deprecated method. Returns a list of devices in a project along with registration and last successful authentication timestamps.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      ProjectService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void listDevicesWithMetadata(
            ProjectService.ListDevicesWithMetadataArgs args,
            CmdListener<ProjectService.ListDevicesWithMetadataResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Project.ListDevicesWithMetadata",
                args,
                listener,
                ProjectService.ListDevicesWithMetadataResponse.class,
                opts
                );
    }

    /**
     * Deprecated method. Returns a list of devices in a project along with registration and last successful authentication timestamps.
     */
    public void listDevicesWithMetadata(
            ProjectService.ListDevicesWithMetadataArgs args,
            CmdListener<ProjectService.ListDevicesWithMetadataResponse> listener
            ) {
        listDevicesWithMetadata(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.ProjectService#listDevicesWithMetadata listDevicesWithMetadata} method.
     */
    public static final class ListDevicesWithMetadataArgs  {

        /**
         * List of extra fields that you want to get back. Accepted values are: "lastAuthTimestamp" and "registrationTimestamp".
         */
        @JsonProperty("extra_metadata")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private List<String> extra_metadata = new ArrayList<String>();

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;


        /**
         * Add an item to the list of extra fields that you want to get back. Accepted values are: "lastAuthTimestamp" and "registrationTimestamp".
         */
        public ListDevicesWithMetadataArgs extra_metadata(String extra_metadata) {
            this.extra_metadata.add(extra_metadata);
            return this;
        }

        /**
         * Set ID of the project.
         */
        public ListDevicesWithMetadataArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.ProjectService#listDevicesWithMetadata listDevicesWithMetadata} method.
     */
    public static final class ListDevicesWithMetadataResponse extends ArrayList<ListDevicesWithMetadataResponseItem> {

        static final long serialVersionUID = 1;


    }


    public static final class ListDevicesWithMetadataResponseItem  {

        @JsonProperty("id")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String id;

        @JsonProperty("lastAuthTimestamp")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public Long lastAuthTimestamp;

        @JsonProperty("registrationTimestamp")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public Long registrationTimestamp;


    }


    // }}}

    // }}}

    //-- RevokeAccess {{{

    /**
     * Revokes access to the project for a given user.
     *
     * @param opts
     *      Options instance which will override current default options. If
     *      there is a need to override defaults, use {@link
     *      ProjectService#getOptions() getOptions()} to get current defaults, and then
     *      modify received options object in some way.
     */
    public void revokeAccess(
            ProjectService.RevokeAccessArgs args,
            CmdListener<ProjectService.RevokeAccessResponse> listener,
            ClubbyOptions opts
            ) {
        clubby.callBackend(
                "/v1/Project.RevokeAccess",
                args,
                listener,
                ProjectService.RevokeAccessResponse.class,
                opts
                );
    }

    /**
     * Revokes access to the project for a given user.
     */
    public void revokeAccess(
            ProjectService.RevokeAccessArgs args,
            CmdListener<ProjectService.RevokeAccessResponse> listener
            ) {
        revokeAccess(args, listener, defaultOpts);
    }

    //-- args {{{

    /**
     * Arguments for the {@link com.cesanta.cloud.ProjectService#revokeAccess revokeAccess} method.
     */
    public static final class RevokeAccessArgs  {

        /**
         * ID of the project.
         */
        @JsonProperty("projectid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String projectid;

        /**
         * ID of the user.
         */
        @JsonProperty("userid")
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private String userid;


        /**
         * Set ID of the project.
         */
        public RevokeAccessArgs projectid(String projectid) {
            this.projectid = projectid;
            return this;
        }

        /**
         * Set ID of the user.
         */
        public RevokeAccessArgs userid(String userid) {
            this.userid = userid;
            return this;
        }

    }


    // }}}

    //-- response {{{

    /**
     * Response of the {@link com.cesanta.cloud.ProjectService#revokeAccess revokeAccess} method.
     */
    public static final class RevokeAccessResponse  {


    }


    // }}}

    // }}}


    public void setDefaultOptions(ClubbyOptions opts) {
        this.defaultOpts = ClubbyOptions.createFrom(opts);
    }

    public ClubbyOptions getOptions() {
        return ClubbyOptions.createFrom(defaultOpts);
    }
}

